#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

#########################################################################################################################
### DESCRIPTION:
### 
### 
#########################################################################################################################
### CHANGE HISTORY:
### MODIFICATION DATE 	CHANGED BY 	COMMENT
### YYYY-MM-DD 		Developer Name 	Creation of Process
### YYYY-MM-DD 		Developer Name 	Reason for modification here
### 
#########################################################################################################################

#########################################################################################################################
###  Constants
#########################################################################################################################

cCub_Src = 'Staffing Seasonality';

cYear_Fr = pYear_Fr;
cYear_To = pYear_To;

cVersion = 'Budget';
cMonth = 'All Months';
cMeasure = 'Staffing Level Input';

cProcessName = GetProcessName();
cDL_Dim = Char(176);
cDL_Start = Char(177);
cDL_Elem = Char(178);

#########################################################################################################################
###  Validation
#########################################################################################################################

If( pConfirm @<> '1' );
#  LogOutput('ERROR', 'ABC');
  ProcessQuit;
EndIf;

#########################################################################################################################
###  Create Source View
#########################################################################################################################

sDim = 'Employee';
sHier = 'Store';
sMDX = '{TM1FilterByLevel({Descendants([Employee].[Store].[All Stores])},1)}';

cTempName = '}TI_' | cProcessName | NumberToString( Int( Rand() * 10000 ) );
While( SubsetExists( sDim, cTempName ) <> 0 );
  cTempName = '}TI_' | cProcessName | NumberToString( Int( Rand() * 10000 ) );
End;
cSub = cTempName;

SubsetCreatebyMDX(cSub, sMDX, sDim | ':' | sHier, 1);
nElem = SubsetGetSize(sDim | ':' | sHier, cSub);
sElem_Last = SubsetGetElementName(sDim | ':' | sHier, cSub, nElem);
SubsetElementDelete(sDim | ':' | sHier, cSub, nElem);
SubsetElementInsert(sDim | ':' | sHier, cSub, sElem_Last, nElem);

nCnt = 1;
While( nCnt <= nElem );
  sElem = SubsetGetElementName(sDim | ':' | sHier, cSub, nCnt);
  nCnt_Month = 1;
  While( nCnt_Month <= 12 );
    sMonth = ElComp('Month', 'All Months', nCnt_Month);
    nCnt_Month = nCnt_Month + 1; 

    sVal = CellGetS(cCub_Src, cVersion, cYear_Fr, sMonth, sHier | ':' | sElem, cMeasure);
    CellPutS(sVal, cCub_Src, cVersion, cYear_To, sMonth, sHier | ':' | sElem, cMeasure);  
  End;
  nCnt = nCnt + 1;
End;
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****

#########################################################################################################################
###  
#########################################################################################################################


#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****

#endregion