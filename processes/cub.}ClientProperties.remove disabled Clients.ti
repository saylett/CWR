#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

#########################################################################################################################
### DESCRIPTION:
### 
### 
#########################################################################################################################
### CHANGE HISTORY:
### MODIFICATION DATE 	CHANGED BY 	COMMENT
### YYYY-MM-DD 		Developer Name 	Creation of Process
### YYYY-MM-DD 		Developer Name 	Reason for modification here
### 
#########################################################################################################################

#########################################################################################################################
###  Validation
#########################################################################################################################

If( pConfirm @<> '1' );
  ProcessQuit;
EndIf;

cProcessName = GetProcessName();

#########################################################################################################################
###  Create Source View
#########################################################################################################################

sDim = '}Clients';
sMDX = '{Filter({TM1SubsetAll([}Clients])},[}ClientProperties].([}ClientProperties].[IsDisabled])=1)}';

cTempName = '}TI_' | cProcessName | NumberToString( Int( Rand() * 10000 ) );
While( SubsetExists( sDim, cTempName ) <> 0 );
  cTempName = '}TI_' | cProcessName | NumberToString( Int( Rand() * 10000 ) );
End;
sSub = cTempName;

SubsetCreatebyMDX( sSub, sMDX, sDim, 1 );
nElem = SubsetGetSize( sDim, sSub );
sElem_Last = SubsetGetElementName( sDim, sSub, nElem );
SubsetElementDelete( sDim, sSub, nElem );
SubsetElementInsert( sDim, sSub, sElem_Last, nElem );

nCnt = 1;
While( nCnt <= nElem );
  sElem = SubsetGetElementName( sDim, sSub, nCnt );
  DeleteClient(sElem);  
  nCnt = nCnt + 1;
End;
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion