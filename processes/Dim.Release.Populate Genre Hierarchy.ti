#region Prolog

#****Begin: Generated Statements***
#****End: Generated Statements****

#########################################################################################################################
### DESCRIPTION:
### 
### 
#########################################################################################################################
### CHANGE HISTORY:
### MODIFICATION DATE 	CHANGED BY 	COMMENT
### YYYY-MM-DD 		Developer Name 	Creation of Process
### YYYY-MM-DD 		Developer Name 	Reason for modification here
### 
#########################################################################################################################

cHier = 'Genre';
cHier_Plan = 'Genre Plan';
cHier_Plan_Ex = 'Genre ex Plan';
cHier_Node = 'All Genres';
sDim = 'Release';
sNode = 'All Releases';
cProcessName = GetProcessName();

If( HierarchyExists( sDim, cHier ) = 1 );
  HierarchyDestroy( sDim, cHier );
EndIf;
If( HierarchyExists( sDim, cHier_Plan ) = 1 );
  HierarchyDestroy( sDim, cHier_Plan );
EndIf;
If( HierarchyExists( sDim, cHier_Plan_Ex ) = 1 );
  HierarchyDestroy( sDim, cHier_Plan_Ex );
EndIf;
HierarchyCreate( sDim, cHier );
HierarchyCreate( sDim, cHier_Plan );
HierarchyCreate( sDim, cHier_Plan_Ex );
HierarchyElementInsert(sDim, cHier, '', cHier_Node, 'C');
HierarchyElementInsert(sDim, cHier_Plan_Ex, '', cHier_Node, 'C');

sMDX = '{TM1FilterByLevel({Descendants({[' | sDim | '].[' | sNode | ']})}, 0)}';

cTempName = '}TI_' | cProcessName | NumberToString( Int( Rand() * 10000 ) );
While( SubsetExists( sDim, cTempName ) <> 0 );
  cTempName = '}TI_' | cProcessName | NumberToString( Int( Rand() * 10000 ) );
End;
sSub = cTempName;

SubsetCreatebyMDX( sSub, sMDX, sDim, 1 );
nElem = SubsetGetSize( sDim, sSub );
sElem_Last = SubsetGetElementName( sDim, sSub, nElem );
SubsetElementDelete( sDim, sSub, nElem );
SubsetElementInsert( sDim, sSub, sElem_Last, nElem );

nCnt = 1;
While( nCnt <= nElem );
  sElem = SubsetGetElementName( sDim, sSub, nCnt );
  sAttr = AttrS('Release', sElem, 'Genre');
  If( sAttr @= '' );
    sGenre = 'No Genre';
  Else;
    sGenre = DimensionElementPrincipalName('Genre', sAttr ); 
  EndIf;

  If( HierarchyElementExists( sDim, cHier, sGenre ) = 0 );
    HierarchyElementInsert( sDim, cHier, '', sGenre, 'C' );
    HierarchyElementInsert( sDim, cHier_Plan_Ex, '', sGenre, 'C' );
    HierarchyElementComponentAdd( sDim, cHier, cHier_Node, sGenre, 1 );
    HierarchyElementComponentAdd( sDim, cHier_Plan_Ex, cHier_Node, sGenre, 1 );

    sElem_Plan = 'Planning - ' | sGenre;
    If( DimIx( sDim, sElem_Plan ) = 0 );
      DimensionElementInsert( sDim, '', sElem_Plan, 'N' );
      DimensionElementComponentAdd( sDim, 'All Releases', sElem_Plan, 1 );
    EndIf;
    HierarchyElementInsert( sDim, cHier, '', sElem_Plan, 'N' );
    HierarchyElementComponentAdd( sDim, cHier, sGenre, sElem_Plan, 1 );
  EndIf;

  If( HierarchyElementExists( sDim, cHier_Plan, sElem_Plan ) = 0 );
    HierarchyElementInsert( sDim, cHier_Plan, '', sElem_Plan, 'N' );
  EndIf;
  
  HierarchyElementInsert( sDim, cHier, '', sElem, 'N' );
  HierarchyElementInsert( sDim, cHier_Plan_Ex, '', sElem, 'N' );
  HierarchyElementComponentAdd( sDim, cHier, sGenre, sElem, 1 );
  HierarchyElementComponentAdd( sDim, cHier_Plan_Ex, sGenre, sElem, 1 );
  nCnt = nCnt + 1;
End;
#endregion
#region Metadata

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data

#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Epilog

#****Begin: Generated Statements***
#****End: Generated Statements****

#endregion